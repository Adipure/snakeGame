{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chanw\\\\Desktop\\\\code\\\\canvas-snake\\\\src\\\\canvas\\\\Canvas.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useEffect } from 'react';\nimport * as S from './Canvas.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Canvas = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, canvasRef) => {\n  _s();\n\n  let {\n    draw,\n    ...props\n  } = _ref;\n  useEffect(() => {\n    if (!canvasRef) {\n      return;\n    }\n\n    const canvas = canvasRef.current;\n\n    if (!canvas) {\n      return;\n    }\n\n    const context = canvas.getContext('2d');\n\n    if (!context) {\n      return;\n    }\n\n    draw(context);\n    return () => context.clearRect(0, 0, window.innerWidth, 400);\n  }, [draw, canvasRef]);\n\n  if (!canvasRef) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.Canvas, {\n    width: 300,\n    height: 150,\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = Canvas;\nexport default Canvas;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"sources":["C:/Users/chanw/Desktop/code/canvas-snake/src/canvas/Canvas.tsx"],"names":["React","forwardRef","useEffect","S","Canvas","canvasRef","draw","props","canvas","current","context","getContext","clearRect","window","innerWidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAO,KAAKC,CAAZ,MAAmB,iBAAnB;;;AASA,MAAMC,MAAM,iCAAGH,UAAU,SACvB,OAAqBI,SAArB,KAAmC;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAAkC;AACjCL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,SAAL,EAAgB;AACd;AACD;;AACD,UAAMG,MAAM,GAAIH,SAAD,CAAkDI,OAAjE;;AACA,QAAI,CAACD,MAAL,EAAa;AACX;AACD;;AAED,UAAME,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB;;AACA,QAAI,CAACD,OAAL,EAAc;AACZ;AACD;;AAEDJ,IAAAA,IAAI,CAACI,OAAD,CAAJ;AACA,WAAO,MAAMA,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBC,MAAM,CAACC,UAA/B,EAA2C,GAA3C,CAAb;AACD,GAhBQ,EAgBN,CAACR,IAAD,EAAOD,SAAP,CAhBM,CAAT;;AAkBA,MAAI,CAACA,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,CAAD,CAAG,MAAH;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAsB,IAAA,MAAM,EAAE,GAA9B;AAAmC,IAAA,GAAG,EAAEA,SAAxC;AAAA,OAA8DE;AAA9D;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA3BsB,kCAAb,iCAAZ;;MAAMH,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React, { forwardRef, useEffect } from 'react';\r\nimport * as S from './Canvas.styles';\r\n\r\ntype CanvasProps = React.DetailedHTMLProps<\r\n  React.CanvasHTMLAttributes<HTMLCanvasElement>,\r\n  HTMLCanvasElement\r\n> & {\r\n  draw: (context: CanvasRenderingContext2D) => void;\r\n};\r\n\r\nconst Canvas = forwardRef<HTMLCanvasElement, CanvasProps>(\r\n  ({ draw, ...props }, canvasRef) => {\r\n    useEffect(() => {\r\n      if (!canvasRef) {\r\n        return;\r\n      }\r\n      const canvas = (canvasRef as React.RefObject<HTMLCanvasElement>).current;\r\n      if (!canvas) {\r\n        return;\r\n      }\r\n\r\n      const context = canvas.getContext('2d');\r\n      if (!context) {\r\n        return;\r\n      }\r\n\r\n      draw(context);\r\n      return () => context.clearRect(0, 0, window.innerWidth, 400);\r\n    }, [draw, canvasRef]);\r\n\r\n    if (!canvasRef) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <S.Canvas width={300} height={150} ref={canvasRef as any} {...props} />\r\n    );\r\n  }\r\n);\r\n\r\nexport default Canvas;\r\n"]},"metadata":{},"sourceType":"module"}