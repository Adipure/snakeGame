{"ast":null,"code":"const randomPositionOnGrid = _ref => {\n  let {\n    gridSize = 5,\n    threshold\n  } = _ref;\n  return Math.floor(Math.random() * (threshold / gridSize)) * gridSize;\n};\n\nexport default randomPositionOnGrid;","map":{"version":3,"sources":["C:/Users/chanw/Desktop/code/canvas-snake/src/utils/randomPositionOnGrid.ts"],"names":["randomPositionOnGrid","gridSize","threshold","Math","floor","random"],"mappings":"AAKA,MAAMA,oBAAoB,GAAG;AAAA,MAAC;AAC5BC,IAAAA,QAAQ,GAAG,CADiB;AAE5BC,IAAAA;AAF4B,GAAD;AAAA,SAI3BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,SAAS,GAAGD,QAA7B,CAAX,IAAqDA,QAJ1B;AAAA,CAA7B;;AAMA,eAAeD,oBAAf","sourcesContent":["interface RandomPositionOnGridArgs {\r\n  gridSize?: number;\r\n  threshold: number;\r\n}\r\n\r\nconst randomPositionOnGrid = ({\r\n  gridSize = 5,\r\n  threshold,\r\n}: RandomPositionOnGridArgs) =>\r\n  Math.floor(Math.random() * (threshold / gridSize)) * gridSize;\r\n\r\nexport default randomPositionOnGrid;\r\n"]},"metadata":{},"sourceType":"module"}